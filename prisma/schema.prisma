// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  workflows      Workflow[]
  emailTemplates EmailTemplate[]
}

model Workflow {
  id          String   @id @default(cuid())
  name        String
  description String?
  isActive    Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  nodes  Node[]
  edges  Edge[]
}

model Node {
  id         String   @id @default(cuid())
  type       String   // 'trigger', 'email', 'delay', 'condition', 'action', 'loop', 'end'
  positionX  Int
  positionY  Int
  data       String   // JSON string for node configuration
  workflowId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  workflow Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  edges    Edge[]   @relation("EdgeSource")
  edges2   Edge[]   @relation("EdgeTarget")
}

model Edge {
  id          String @id @default(cuid())
  sourceId    String
  targetId    String
  workflowId  String
  createdAt   DateTime @default(now())
  
  workflow Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  source   Node     @relation("EdgeSource", fields: [sourceId], references: [id], onDelete: Cascade)
  target   Node     @relation("EdgeTarget", fields: [targetId], references: [id], onDelete: Cascade)
}

model EmailTemplate {
  id        String   @id @default(cuid())
  name      String
  subject   String
  content   String   // HTML content
  json      String   // JSON structure for email builder
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}